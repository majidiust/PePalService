{
  "author": {
    "name": "Markus Sieber",
    "email": "sieber.m@gmail.com"
  },
  "name": "timer",
  "description": "utility function to simplify using combinations of setTimeout/setInterval.",
  "version": "0.0.2",
  "repository": {
    "type": "git",
    "url": "git://github.com/markussieber/timer.git"
  },
  "main": "timer.js",
  "engines": {
    "node": ">=0.0.1"
  },
  "dependencies": {},
  "devDependencies": {},
  "readme": "\nthis package provides a utility function which unifies the setTimeout and \nsetInterval functions. \n\nIt also provides a comfortable way to chain multiple\nsetTimeouts with different timeouts and even a finally setInterval with\nthe same callback. \n\nAn additional feature is the auto interval function which applies\na simple setInterval which triggers at event time slots, ie\nif you call the timer.auto function with an interval of 15*60*1000 \n(15 minutes) your callback will be triggered at 00:15:00, 00:30:00, and so on.\n\n\n\nUSAGE EXAMPLE (JAVASCRIPT):\n\t\n\t// simple setTimeout\n\t// same as setTimeout( cb, 200);\n\ttimer(200, cb);\n\t\n\t\n\t// setTimeout with same callback after 200ms and after 400ms\n\t// the second array element is also 200ms because it is set up after the first one (200ms+200ms = 400ms)\n\ttimer( [200,200], cb );\n\t// same as \n\t// setTimeout( 200, cb );\n\t// setTimeout( 400, cb );\n\n\t// simple setInterval\n\ttimer.interval(2000,cb);\n\t// same as setInterval(cb,2000);\n\t\n\t// setting up a interval after a timeout\n\ttimer(500,2000,cb);\n\t// this one will trigger cb after:\n\t//  500ms, 2500ms, 4500ms, 6500ms, ...\n\t\n\t\n\t// auto slot a interval (for example if you want your callback to be triggered at 00:15:00, 00:30:00, ..)\n\ttimer.auto(15*60*1000, cb);\n\t\n\t\n\t\n\t\n\t// clearing a timeout:\n\to = timer(500,cb);\n\to.clear();\n\t\n\t// if you use the clear() function on a timer with multiple timeouts or intevals, ALL of them will be cleared,\n\t// so your callback won't be triggered any more\n\t\n\t\nUSAGE EXAMPLE (COFFEESCRIPT):\n\t\n\t# with coffeescript the utility functions are even more handy\n\t\n\ttimer 200, -> console.log 'hello'\n\t\n\ttimer [500,200], -> console.log 'hello after 500ms and 700ms'\n\t\n\t# BONG every 30min at even time slots (0:00, 0:30, ..)\n\t{clear} = timer.auto 30*60*1000, -> console.log 'BONG'\n\t# end the BONG interval after 5h\n\ttimer 5*60*60*1000, clear\n\t\n\t\n\t\n\n\nQUESTIONS or feedback?\n\tyou are welcome, send me an email at sieber.m@gmail.com\n\t",
  "readmeFilename": "README",
  "bugs": {
    "url": "https://github.com/markussieber/timer/issues"
  },
  "_id": "timer@0.0.2",
  "_from": "timer@*"
}
